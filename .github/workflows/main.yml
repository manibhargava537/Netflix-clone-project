name: netflix-cloneapp

#on:
    # Trigger the workflow on push
    # but only for the pre-production branch
    #push:
        branches:
            - master
        paths-ignore:
          - 'Kubernetes/**'
env:
    AWS_REPOSITORY_URL: ${{ secrets.AWS_REPOSITORY_URL }}
    GITHUB_TOKEN: ${{ secrets.LOGIN_GITHUB_TOKEN }}
    LOGIN_GITHUB_USER: ${{ secrets.LOGIN_GITHUB_USER }}

jobs:
    NodeJs:
        runs-on: ubuntu-latest

        steps:
             - name: configure The IAM cred
               uses: aws-actions/configure-aws-credentials@v1
               with:
                 aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                 aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                 aws-region: us-east-1

             - name: Login in to Amazon ECR
               id: login-ecr
               uses: aws-actions/amazon-ecr-login@v1  
             
             - uses: actions/checkout@v2
             - name: SER ENV
               run: echo "GITHUB_BRANCH=$(echo $GITHUB_REF_NAME-$GITHUB_SHA)" >> $GITHUB_ENV

             - name: Build the Docker image
               run: |
                  #aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 211125610248.dkr.ecr.us-east-1.amazonaws.com/netflix
                  docker build --build-arg TMDB_V3_API_KEY=${{secrets.TMDB_V3_API_KEY}} -t ${{secrets.AWS_REPOSITORY_URL}}:$GITHUB_REF_NAME-$GITHUB_SHA . 
                  docker push ${{secrets.AWS_REPOSITORY_URL}}:$GITHUB_REF_NAME-$GITHUB_SHA
                 
        
             - name: Commit changes  
               run: |
                  git clone https://${{secrets.LOGIN_GITHUB_USER}}:${{secrets.LOGIN_GITHUB_TOKEN}}@github.com/cloudiandevops/DevOps-Project.git

                  cd DevOps-Project

                  git config --local user.name "cloudiandevops"
                  git config --local user.email "cloudiandevops@gmail.com"

                  yq e '.spec.template.spec.containers[0].image = "${{secrets.AWS_REPOSITORY_URL}}:${{ env.GITHUB_BRANCH }}" ' -i Kubernetes/deployment.yml
                  git add .
                  git commit -m "update deployment file with latest changes" || echo "No changes to commit"
                  git push --set-upstream origin master
                  
